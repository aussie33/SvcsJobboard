root@ubuntu-s-1vcpu-2gb-sfo3-01:/tmp/career-portal# # Create the database tables manually
PGPASSWORD=career_portal_secure_pass psql -h localhost -U career_portal_user -d career_portal_db << 'EOF' 

-- Create categories table
CREATE TABLE IF NOT EXISTS categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL,
    description TEXT
);

-- Create users table  
CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(100) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    firstName VARCHAR(100),
    lastName VARCHAR(100),
    role VARCHAR(50) DEFAULT 'applicant',
    passwordHash VARCHAR(255) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create jobs table
CREATE TABLE IF NOT EXISTS jobs (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    shortDescription TEXT,
    fullDescription TEXT,
    requirements TEXT,
    type VARCHAR(50) DEFAULT 'full-time',
    location VARCHAR(100),
    salaryRange VARCHAR(100),
    categoryId INTEGER REFERENCES categories(id),
    department VARCHAR(100),
    postedDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50) DEFAULT 'active',
    tags TEXT[]
);

-- Create applications table
CREATE TABLE IF NOT EXISTS applications (
    id SERIAL PRIMARY KEY,
    jobId INTEGER REFERENCES jobs(id),
    userId INTEGER REFERENCES users(id),
    resumePath VARCHAR(500),
    coverLetter TEXT,
    status VARCHAR(50) DEFAULT 'pending',
    appliedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Insert sample data
INSERT INTO categories (name, description) VALUES 
EOFCONFLICT DO NOTHING;ent","Administration","Organization"}') $55,000', 7, 'Human Resources', NOW(), 'ac
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
INSERT 0 13
INSERT 0 5
INSERT 0 5
root@ubuntu-s-1vcpu-2gb-sfo3-01:/tmp/career-portal# # Continue with the rest of the deployment
./deploy-to-new-server.sh
=== Career Portal Deployment Script ===
Server: 134.199.237.34 (Ubuntu)
Date: Tue Sep  9 01:35:09 UTC 2025

⚠️  Running as root. This script should be run as a regular user with sudo privileges.
Continue anyway? (y/N): y
Step 1: Stopping existing services...
Career portal service not running
No PM2 processes running

Step 2: Installing system dependencies...

Hit:1 http://security.ubuntu.com/ubuntu plucky-security InRelease
Hit:2 https://repos-droplet.digitalocean.com/apt/droplet-agent main InRelease
Hit:3 http://mirrors.digitalocean.com/ubuntu plucky InRelease
Hit:4 http://mirrors.digitalocean.com/ubuntu plucky-updates InRelease
Hit:5 http://mirrors.digitalocean.com/ubuntu plucky-backports InRelease
29 packages can be upgraded. Run 'apt list --upgradable' to see them.
Note, selecting 'postgresql' instead of 'postgresql-contrib'
nodejs is already the newest version (20.18.1+dfsg-1ubuntu2).
npm is already the newest version (9.2.0~ds1-3).
nginx is already the newest version (1.26.3-2ubuntu1.2).
postgresql is already the newest version (17+274).
curl is already the newest version (8.12.1-3ubuntu1).
git is already the newest version (1:2.48.1-0ubuntu1.1).
Summary:                    
  Upgrading: 0, Installing: 0, Removing: 0, Not Upgrading: 29

Step 3: Setting up application directory...
Copying application files from /tmp/career-portal...

Step 4: Installing Node.js dependencies...
npm WARN config production Use `--omit=dev` instead.

up to date, audited 433 packages in 3s

55 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

Step 5: Setting up environment variables...
✓ Environment file created

Step 6: Setting up PostgreSQL database...
ERROR:  role "career_portal_user" already exists
ERROR:  database "career_portal_db" already exists
GRANT

> rest-express@1.0.0 db:push
> drizzle-kit push

sh: 1: drizzle-kit: not found
root@ubuntu-s-1vcpu-2gb-sfo3-01:/tmp/career-portal# # Skip the drizzle step and continue from where it left off
cd /var/www/career-portal

# Set up nginx configuration
sudo tee /etc/nginx/sites-available/career-portal > /dev/null << 'EOF'
server {
    listen 80;
    server_name 134.199.237.34;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Main application
    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Static files
    location /uploads/ {
        alias /var/www/career-portal/uploads/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
EOF

# Enable the nginx site
sudo rm -f /etc/nginx/sites-enabled/default
sudo ln -sf /etc/nginx/sites-available/career-portal /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl restart nginx
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is success