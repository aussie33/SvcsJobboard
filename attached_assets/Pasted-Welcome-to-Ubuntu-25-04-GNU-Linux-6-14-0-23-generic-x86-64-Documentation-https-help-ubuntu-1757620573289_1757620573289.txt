Welcome to Ubuntu 25.04 (GNU/Linux 6.14.0-23-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Thu Sep 11 19:55:53 UTC 2025

  System load:  0.0               Processes:             122
  Usage of /:   8.5% of 47.35GB   Users logged in:       1
  Memory usage: 27%               IPv4 address for eth0: 134.199.237.34
  Swap usage:   0%                IPv4 address for eth0: 10.48.0.5

30 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable


*** System restart required ***
root@ubuntu-s-1vcpu-2gb-sfo3-01:~# # 1. Test with the CORRECT route and method
cd /var/www/career-portal
curl -X PATCH http://localhost:5000/api/users/2 \
  -H "Content-Type: application/json" \
  -H "Cookie: connect.sid=s%3AVJrZn9-nqp3lCHaVN6Da0NgjKTqFo_2s.example" \
  -d '{"password":"newpassword123"}' \
  -v

# 2. Let's see what the PATCH route code looks like
sed -n '357,400p' server/routes.ts

# 3. Check if bcrypt is being used in the code
grep -A 30 -B 5 "password.*hash\|bcrypt" server/routes.ts

# 4. Test a simple field update to see if PATCH works at all
curl -X PATCH http://localhost:5000/api/users/2 \
  -H "Content-Type: application/json" \
  -H "Cookie: connect.sid=s%3AVJrZn9-nqp3lCHaVN6Da0NgjKTqFo_2s.3prHlwacMWrqiWiRd3qYvVLEdWyxf6FyQtY0qswSQ%2B0" \
  -d '{"firstName":"UpdatedEmployee"}' \
  -v
* Host localhost:5000 was resolved.
* IPv6: ::1
* IPv4: 127.0.0.1
*   Trying [::1]:5000...
* connect to ::1 port 5000 from ::1 port 33300 failed: Connection refused
*   Trying 127.0.0.1:5000...
* Connected to localhost (127.0.0.1) port 5000
* using HTTP/1.x
> PATCH /api/users/2 HTTP/1.1
> Host: localhost:5000
> User-Agent: curl/8.12.1
> Accept: */*
> Content-Type: application/json
> Cookie: connect.sid=s%3AVJrZn9-nqp3lCHaVN6Da0NgjKTqFo_2s.example
> Content-Length: 29
> 
* upload completely sent off: 29 bytes
< HTTP/1.1 401 Unauthorized
< X-Powered-By: Express
< Access-Control-Allow-Origin: *
< Access-Control-Allow-Credentials: true
< Access-Control-Allow-Methods: GET, POST, PUT, DELETE, PATCH, OPTIONS
< Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization
< Content-Type: application/json; charset=utf-8
< Content-Length: 26
< ETag: W/"1a-pljHtlo127JYJR4E/RYOPb6ucbw"
< Date: Thu, 11 Sep 2025 19:55:57 GMT
< Connection: keep-alive
< Keep-Alive: timeout=5
< 
* Connection #0 to host localhost left intact
{"message":"Unauthorized"}  app.patch("/api/users/:id", requireAuth, requireRole(["admin"]), async (req, res) => {
    try {
      const userId = parseInt(req.params.id);
      const user = await storage.getUser(userId);
      
      if (!user) {
        return res.status(404).json({ message: "User not found" });
      }
      
      // Get current user ID for permission checks
      const currentUserId = req.user?.id;
      
      // Only allow certain fields to be updated
      const { 
        username, email, firstName, lastName, middleName, 
        preferredName, fullName, role, department, isActive, isSuperAdmin 
      } = req.body;
      
      const updates: Partial<typeof user> = {};
      
      if (username !== undefined) {
        const existingUser = await storage.getUserByUsername(username);
        if (existingUser && existingUser.id !== userId) {
          return res.status(400).json({ message: "Username already exists" });
        }
        updates.username = username;
      }
      
      if (email !== undefined) {
        const existingUser = await storage.getUserByEmail(email);
        if (existingUser && existingUser.id !== userId) {
          return res.status(400).json({ message: "Email already exists" });
        }
        updates.email = email;
      }
      
      // Update name fields
      if (firstName !== undefined) updates.firstName = firstName;
      if (lastName !== undefined) updates.lastName = lastName;
      if (middleName !== undefined) updates.middleName = middleName;
      if (preferredName !== undefined) updates.preferredName = preferredName;
      if (fullName !== undefined) updates.fullName = fullName;
      
      // Update role and status (protected by the storage.updateUser method)
* Host localhost:5000 was resolved.
* IPv6: ::1
* IPv4: 127.0.0.1
*   Trying [::1]:5000...
* connect to ::1 port 5000 from ::1 port 33308 failed: Connection refused
*   Trying 127.0.0.1:5000...
* Connected to localhost (127.0.0.1) port 5000
* using HTTP/1.x
> PATCH /api/users/2 HTTP/1.1
> Host: localhost:5000
> User-Agent: curl/8.12.1
> Accept: */*
> Content-Type: application/json
> Cookie: connect.sid=s%3AVJrZn9-nqp3lCHaVN6Da0NgjKTqFo_2s.3prHlwacMWrqiWiRd3qYvVLEdWyxf6FyQtY0qswSQ%2B0
> Content-Length: 31
> 
* upload completely sent off: 31 bytes
< HTTP/1.1 401 Unauthorized
< X-Powered-By: Express
< Access-Control-Allow-Origin: *
< Access-Control-Allow-Credentials: true
< Access-Control-Allow-Methods: GET, POST, PUT, DELETE, PATCH, OPTIONS
< Access-Control-Allow-Headers: Origin, X-Requested-With, Content-Type, Accept, Authorization
< Content-Type: application/json; charset=utf-8
< Content-Length: 26
< ETag: W/"1a-pljHtlo127JYJR4E/RYOPb6ucbw"
< Date: Thu, 11 Sep 2025 19:55:57 GMT
< Connection: keep-alive
< Keep-Alive: timeout=5
< 
* Connection #0 to host localhost left intact